'use strict';

exports.__esModule = true;

exports.default = function (name, output) {
    let reporters = [];

    if (name instanceof Array) reporters = name.map(r => typeof r === 'string' || typeof r === 'function' ? { name: r } : r);else {
        const reporter = { name, output };

        reporters.push(reporter);
    }

    reporters.forEach(r => validateReporterOutput(r.output));

    return reporters;
};

var _isStream = require('is-stream');

var _runtime = require('../errors/runtime');

var _message = require('../errors/runtime/message');

var _message2 = _interopRequireDefault(_message);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isStreamMock(obj) {
    return obj && typeof obj.write === 'function' && typeof obj.end === 'function';
}

function validateReporterOutput(obj) {
    const isValidReporterOutput = obj === void 0 || typeof obj === 'string' || (0, _isStream.writable)(obj) || isStreamMock(obj);

    if (!isValidReporterOutput) throw new _runtime.GeneralError(_message2.default.invalidReporterOutput);
}

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9wcmVwYXJlLXJlcG9ydGVycy5qcyJdLCJuYW1lcyI6WyJuYW1lIiwib3V0cHV0IiwicmVwb3J0ZXJzIiwiQXJyYXkiLCJtYXAiLCJyIiwicmVwb3J0ZXIiLCJwdXNoIiwiZm9yRWFjaCIsInZhbGlkYXRlUmVwb3J0ZXJPdXRwdXQiLCJpc1N0cmVhbU1vY2siLCJvYmoiLCJ3cml0ZSIsImVuZCIsImlzVmFsaWRSZXBvcnRlck91dHB1dCIsIkdlbmVyYWxFcnJvciIsIk1FU1NBR0UiLCJpbnZhbGlkUmVwb3J0ZXJPdXRwdXQiXSwibWFwcGluZ3MiOiI7Ozs7a0JBb0JlLFVBQVVBLElBQVYsRUFBZ0JDLE1BQWhCLEVBQXdCO0FBQ25DLFFBQUlDLFlBQVksRUFBaEI7O0FBRUEsUUFBSUYsZ0JBQWdCRyxLQUFwQixFQUNJRCxZQUFZRixLQUFLSSxHQUFMLENBQVNDLEtBQUssT0FBT0EsQ0FBUCxLQUFhLFFBQWIsSUFBeUIsT0FBT0EsQ0FBUCxLQUFhLFVBQXRDLEdBQW1ELEVBQUVMLE1BQU1LLENBQVIsRUFBbkQsR0FBaUVBLENBQS9FLENBQVosQ0FESixLQUVLO0FBQ0QsY0FBTUMsV0FBVyxFQUFFTixJQUFGLEVBQVFDLE1BQVIsRUFBakI7O0FBRUFDLGtCQUFVSyxJQUFWLENBQWVELFFBQWY7QUFDSDs7QUFFREosY0FBVU0sT0FBVixDQUFrQkgsS0FBS0ksdUJBQXVCSixFQUFFSixNQUF6QixDQUF2Qjs7QUFFQSxXQUFPQyxTQUFQO0FBQ0gsQzs7QUFsQ0Q7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVBLFNBQVNRLFlBQVQsQ0FBdUJDLEdBQXZCLEVBQTRCO0FBQ3hCLFdBQU9BLE9BQ0EsT0FBT0EsSUFBSUMsS0FBWCxLQUFxQixVQURyQixJQUVBLE9BQU9ELElBQUlFLEdBQVgsS0FBbUIsVUFGMUI7QUFHSDs7QUFFRCxTQUFTSixzQkFBVCxDQUFpQ0UsR0FBakMsRUFBc0M7QUFDbEMsVUFBTUcsd0JBQXdCSCxRQUFRLEtBQUssQ0FBYixJQUN4QixPQUFPQSxHQUFQLEtBQWUsUUFEUyxJQUV4Qix3QkFBaUJBLEdBQWpCLENBRndCLElBR3hCRCxhQUFhQyxHQUFiLENBSE47O0FBS0EsUUFBSSxDQUFDRyxxQkFBTCxFQUNJLE1BQU0sSUFBSUMscUJBQUosQ0FBaUJDLGtCQUFRQyxxQkFBekIsQ0FBTjtBQUNQIiwiZmlsZSI6InV0aWxzL3ByZXBhcmUtcmVwb3J0ZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd3JpdGFibGUgYXMgaXNXcml0YWJsZVN0cmVhbSB9IGZyb20gJ2lzLXN0cmVhbSc7XG5pbXBvcnQgeyBHZW5lcmFsRXJyb3IgfSBmcm9tICcuLi9lcnJvcnMvcnVudGltZSc7XG5pbXBvcnQgTUVTU0FHRSBmcm9tICcuLi9lcnJvcnMvcnVudGltZS9tZXNzYWdlJztcblxuZnVuY3Rpb24gaXNTdHJlYW1Nb2NrIChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmXG4gICAgICAgICAgIHR5cGVvZiBvYmoud3JpdGUgPT09ICdmdW5jdGlvbicgJiZcbiAgICAgICAgICAgdHlwZW9mIG9iai5lbmQgPT09ICdmdW5jdGlvbic7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlUmVwb3J0ZXJPdXRwdXQgKG9iaikge1xuICAgIGNvbnN0IGlzVmFsaWRSZXBvcnRlck91dHB1dCA9IG9iaiA9PT0gdm9pZCAwIHx8XG4gICAgICAgICAgdHlwZW9mIG9iaiA9PT0gJ3N0cmluZycgfHxcbiAgICAgICAgICBpc1dyaXRhYmxlU3RyZWFtKG9iaikgfHxcbiAgICAgICAgICBpc1N0cmVhbU1vY2sob2JqKTtcblxuICAgIGlmICghaXNWYWxpZFJlcG9ydGVyT3V0cHV0KVxuICAgICAgICB0aHJvdyBuZXcgR2VuZXJhbEVycm9yKE1FU1NBR0UuaW52YWxpZFJlcG9ydGVyT3V0cHV0KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKG5hbWUsIG91dHB1dCkge1xuICAgIGxldCByZXBvcnRlcnMgPSBbXTtcblxuICAgIGlmIChuYW1lIGluc3RhbmNlb2YgQXJyYXkpXG4gICAgICAgIHJlcG9ydGVycyA9IG5hbWUubWFwKHIgPT4gdHlwZW9mIHIgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiByID09PSAnZnVuY3Rpb24nID8geyBuYW1lOiByIH0gOiByKTtcbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgcmVwb3J0ZXIgPSB7IG5hbWUsIG91dHB1dCB9O1xuXG4gICAgICAgIHJlcG9ydGVycy5wdXNoKHJlcG9ydGVyKTtcbiAgICB9XG5cbiAgICByZXBvcnRlcnMuZm9yRWFjaChyID0+IHZhbGlkYXRlUmVwb3J0ZXJPdXRwdXQoci5vdXRwdXQpKTtcblxuICAgIHJldHVybiByZXBvcnRlcnM7XG59XG4iXX0=
